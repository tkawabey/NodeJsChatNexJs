import Head from 'next/head'
import Image from 'next/image'
import { useState } from "react";
import styles from '../styles/Home.module.css'
import io from "socket.io-client";

const socket = io("http://localhost:8000");



export default function Home() {
  // データを管理するため、ReactのUseStateのフックスを宣言します。
  // 送信するメッセージ
  const [message, setMessage] = useState("");
  // 表示するメッセージ一覧
  const [list, setList] = useState([]);

  // メッセージを送信する関数
  const handleSendMessage = () => {
    // WebSocketでメッセージ送信
    socket.emit(
        "send_message",   // <- キー。サーバー側で受け取る時、同じ名前で受けとる
        { message: message }  // 値。
     );
  };

  //サーバーから受信のコールバック
  socket.on("received_message", (data) => {
    // console.log(data);
    setList([...list, data]);
  });


  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <div className={styles.container}>
        <h2>チャットアプリ</h2>
        <div className={styles.chatInputButton}>
          <input
            type="text"
            onChange={(e) => {
              setMessage(e.target.value);
            }}
            placeholder="ちゃっと・・・"
            value={message}
          />
          <button
            onClick={() => {
              handleSendMessage();
              setMessage("");
            }}
          >
            チャット送信
          </button>
        </div>
        {/* {JSON.stringify(list)} */}
        <div> 
          {/* UseStateのlistが更新すると、チャットリストを再表示します */}    
          {list.map((chat) => (
            <div key={chat.message} className={styles.chatArea}>
              {chat.message}
            </div>
          ))}
        </div>
      </div>
    </div>
  )
}
